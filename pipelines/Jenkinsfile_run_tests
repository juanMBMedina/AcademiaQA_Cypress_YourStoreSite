pipeline {
    agent any

    environment {
        BASE_DIR = 'workspace'
    }

    parameters {
        choice(name: 'SUITE', choices: ['addingToCartSuite', 'loginUserSuite', 'registerUserSuite'], description: 'Select the test suite to run')
        choice(name: 'BROWSER', choices: ['chrome', 'edge', 'firefox', 'electron'], description: 'Select the browser for test execution')
        string(name: 'PROJECT_NAME', defaultValue: 'YourStore-Cypress-TestLab', description: 'Project base directory name')
        string(name: 'REPO_URL', defaultValue: 'git@github.com:juanMBMedina/YourStore-Cypress-TestLab.git', description: 'SSH repository URL')
        string(name: 'DEFAULT_BRANCH', defaultValue: 'main', description: 'Repository branch to checkout')
    }

    stages {

        stage('Clone Repository') {
            steps {
                script {
                    build(
                        job: 'GetRepository',
                        parameters: [
                            string(name: 'PROJECT_NAME', value: params.PROJECT_NAME),
                            string(name: 'REPO_URL', value: params.REPO_URL),
                            string(name: 'CLONE_DIR', value: BASE_DIR),
                            string(name: 'BRANCH', value: params.DEFAULT_BRANCH)
                        ]
                    )
                }
            }
        }

        stage('Prepare and Run Cypress') {
            steps {
                dir("${BASE_DIR}/${PROJECT_NAME}") {
                    script {
                        docker.compose(file: 'docker-compose.cypress.yml') {
                            up('cypress', '--abort-on-container-exit')
                        }
                    }
                }
            }
        }
    }

    post {
        always {
            echo 'Pipeline execution completed.'
        }
    }
}
